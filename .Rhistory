count(gun_deaths, police, race)
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race) + geom_bar(aes(x = police, y = percent*100)) #dont know what to do with this
ggplot(percent_race) + geom_bar(aes(x = police, y = percent*100))
ggplot(percent_race, aes(stat="identity")) + geom_bar(aes(x = police, y = percent*100))
ggplot(percent_race, aes(x = police, y = percent*100)) + geom_bar(aes(stat="identity"))
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race, aes(x = police, y = percent*100)) + geom_bar(aes(stat = "identity"))
ggplot(percent_race, aes(x = police)) + geom_bar(aes(stat = "identity"))
ggplot(percent_race, aes(x = police, y = percent*100)) + geom_bar(aes(stat = "identity"))
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_bar(aes(stat = "identity"))
View(percent_race)
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_bar(aes(stat = "identity"))
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
percent_race <- as.factor(percent_race$police)
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_bar(aes(stat = "identity"))
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
percent_race$police <- as.factor(percent_race$police)
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_bar(aes(stat = "identity"))
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
percent_race$police <- as.factor(percent_race$police)
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_bar(aes(stat ="identity"))
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
percent_race$police <- as.factor(percent_race$police)
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_col()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_col()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race, aes(x = police, y = percent*100, fill = race)) + geom_bar()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race, aes(x = police, fill = race)) + geom_bar()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent1 = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent1*100, fill = race)) + geom_bar(stat = "identity", width = 0.7)
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent1 = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent1, fill = race)) + geom_bar(stat = "identity", width = 0.7)
View(percent_race)
View(percentgun)
gun_deaths$police <- as.factor(gun_deaths$police)
ggplot(gun_deaths) +geom_boxplot(aes(x= police, y= age)) + scale_x_discrete(labels = c("Not Police Involved", "Police Involved")) +labs(title = "Gun Deaths in the United States (2012-2014)", y = "Age of Victim")
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent1 = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent1, fill = race)) + geom_bar(stat = "identity", width = 0.7)
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent1 = count/sum(count))
ggplot(percent_race,aes(x=police, y= count, fill = race)) + geom_bar(stat = "identity", width = 0.7)
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent, fill = race)) + geom_bar()
ggplot(percent_race,aes(x=police, fill = race)) + geom_bar()
gun_deaths <- as.factor(race)
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent*100, fill = race)) + geom_bar(stat = "identity")
rm(list=ls())
# don't modify this chunk unless you still need to install rcfss
# if so, run "devtools::install_github("uc-cfss/rcfss")" in the console first
rm(list=ls()) #cleaning out environment
library(tidyverse)    # load tidyverse packages, including ggplot2
library(rcfss)
library(knitr)
# load the data
data("gun_deaths")
gun_deaths
permonth <- count(gun_deaths, Month = month) #renaming month column
colnames(permonth)[2] <- "Number of Deaths" #renaming Number of Deaths column
kable(permonth)
ggplot(data = gun_deaths, aes(x = month)) +geom_bar() + scale_x_continuous(breaks=1:12, labels= c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Month", y = "Number of gun deaths")
#scale is continuous because R just sees the months as numbers (not signifying anything)
#dropping NAs ---------------------------
gun_na <- gun_deaths %>%
drop_na(intent) %>%
#plotting
ggplot(data = gun_na, aes(x = intent)) + geom_bar(stat = "identity") + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths")
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent*100, fill = race)) + geom_bar(stat = "identity"
percent_race <- gun_deaths %>%
library(tidyverse)
print(mtcars)
gun_na <- gun_deaths %>%
drop_na(intent) %>%
#plotting
ggplot(data = gun_na, aes(x = intent)) + geom_bar(stat = "identity") + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths")
rm(list=ls()) #cleaning out environment
library(tidyverse)    # load tidyverse packages, including ggplot2
library(rcfss)
library(knitr)
# load the data
data("gun_deaths")
gun_deaths
gun_na <- gun_deaths %>%
drop_na(intent) %>%
#plotting
ggplot(data = gun_na, aes(x = intent)) + geom_bar(stat = "identity") + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths")
gun_na <- gun_deaths %>%
drop_na(intent) %>%
#plotting
ggplot(data = gun_na, aes(x = reorder(intent, -n)) + geom_bar(stat = "identity") + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths"))
gun_na <- gun_deaths %>%
drop_na(intent)
ggplot(data = gun_na, aes(x = reorder(intent, -n)) + geom_bar(stat = "identity") + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths"))
gun_na <- gun_deaths %>%
drop_na(intent)
#plotting
ggplot(data = gun_na, aes(x = reorder(intent, -n), y = n) + geom_col() + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths"))
gun_na <- gun_deaths %>%
drop_na(intent)
#plotting
ggplot(data = gun_na, aes(x = reorder(intent, -n), y = n) + geom_bar() + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths"))
gun_na <- gun_deaths %>%
drop_na(intent) %>%
count(intent)
#plotting
ggplot(data = gun_na, aes(x = reorder(intent, -n), y = n) + geom_col() + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths"))
ggplot(data = gun_na, aes(x = reorder(intent, -n), y = n)) + geom_col() + labs(title = "Gun Deaths in the United States (2012-2014)", x = "Intent of Death", y =  "Number of gun deaths")
count(gun_deaths,police, race, age)
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot() #why is everything flat
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent*100, fill = race)) + geom_bar(stat = "identity")
ggplot(gun_deaths, aes(x=police,y=age, fill = race)) + geom_boxplot()
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
str(age)
str(gun_deaths$age)
str(gun_deaths$race)
gun_deaths$race <- as.numeric(age)
gun_deaths$race <- as.numeric(gun_deaths$age)
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
gun_deaths$age <- as.numeric(gun_deaths$age)
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
gun_deaths$race <- as.numeric(gun_deaths$race)
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
gun_deaths$age <- as.numeric(gun_deaths$age)
ggplot(gun_deaths, aes(x=age,y=race, fill = police)) + geom_boxplot()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent*100, fill = race)) + geom_bar(stat = "identity")
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent*100, fill = race)) + geom_bar()
percent_race <- gun_deaths %>%
group_by(race, police) %>%
summarize(count=n()) %>%
mutate(percent = count/sum(count))
ggplot(percent_race,aes(x=police, y= percent*100, fill = race)) + geom_bar(stat = "identity")
install.packages(c("devtools", "knitr", "magrittr", "sf", "sp", "rmarkdown", "usethis"))
devtools::install_github("ropensci/osmdata")
usethis::use_course("https://github.com/angela-li/sotmus-r/archive/master.zip")
scdbv_mod <- read_csv("data/SCDB_2018_01_justiceCentered_Citation.csv")
ggtitle("Guesses per period")
library(readxl)
library(tidyverse)
genesweep <- read_excel("GeneSweepRaw.xlsx") %>%
mutate(guess = as.numeric(guess), period = as.factor(period))
glimpse(genesweep)
# creating winning guess data frame
winning <- tribble(
~period, ~win_guess,
1, 27462,
2, 25947,
3, 26500
) %>%
mutate(period = as.factor(period))
# creating winning guess column
temp <- left_join(genesweep, winning) %>%
mutate(distance = abs(win_guess - guess))
# creating unique ids based on emails
temp$id <- group_indices(temp, email)
# let's clean up and reaname temp
genesweep <- select(temp, -uniqueid, -X__1)
glimpse(genesweep)
genesweep %>%
ggplot(aes(guess, distance, color = period)) +
geom_point()
genesweep %>%
filter(guess < 100000) %>%
ggplot(aes(period, guess)) +
geom_boxplot() +
ggtitle("Guesses per period")
# weight this by sample size
genesweep %>%
filter(guess < 100000) %>%
ggplot(aes(period, guess)) +
geom_boxplot() +
ggtitle("Guesses per period") +
labs(x = "Period", y = "Guess")
# weight this by sample size
genesweep %>%
filter(guess < 100000) %>%
ggplot(aes(period, guess)) +
geom_boxplot() +
ggtitle("Guesses per Period") +
labs(x = "Period", y = "Guess")
# weight this by sample size
genesweep %>%
filter(guess < 100000) %>%
ggplot(aes(period, guess)) +
geom_boxplot(weighting = TRUE) +
ggtitle("Guesses per Period") +
labs(x = "Period", y = "Guess")
# weight this by sample size
genesweep %>%
filter( guess < 100000 ) %>%
ggplot(aes(period, guess)) +
geom_boxplot(weighting = TRUE) +
ggtitle("Guesses per Period") +
labs(x = "Period", y = "Guess")
# weight this by sample size
??geom_boxplot
genesweep %>%
filter( guess < 100000 ) %>%
ggplot(aes( period , guess)) +
geom_boxplot(varwidth = TRUE) +
ggtitle("Guesses per Period") +
labs(x = "Period", y = "Guess")
# weight this by sample size
count(uniqueid)
genesweep %>%
count(id)
genesweep %>%
count(distinct(id))
genesweep %>%
distinct(id) %>%
count()
genesweep %>%
distinct(id) %>%
count() %>%
kable()
library(readxl)
library(tidyverse)
library(knitr)
genesweep <- read_excel("GeneSweepRaw.xlsx") %>%
mutate(guess = as.numeric(guess),
period = as.factor(period))
glimpse(genesweep)
# creating winning guess data frame
winning <- tribble(
~period, ~win_guess,
1, 27462,
2, 25947,
3, 26500
) %>%
mutate(period = as.factor(period))
# creating winning guess column
temp <- left_join(genesweep, winning) %>%
mutate(distance = abs(win_guess - guess))
# creating unique ids based on emails
temp$id <- group_indices(temp, email)
# let's clean up and reaname temp
genesweep <- select(temp, -uniqueid, -X__1)
glimpse(genesweep)
genesweep %>%
ggplot(aes(guess, distance, color = period)) +
geom_point()
genesweep %>%
filter( guess < 100000 ) %>%
ggplot(aes( period , guess)) +
geom_boxplot(varwidth = TRUE) +
ggtitle("Guesses per Period") +
labs(x = "Period", y = "Guess")
genesweep %>%
distinct(id) %>%
count() %>%
kable()
genesweep %>%
distinct(id) %>%
count()
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c("modelr", "broom", "gam"))
install.packages(c("modelr", "broom", "gam"))
library(tidyverse)
library(modelr)
library(broom)
library(gam)
college <- as_tibble(ISLR::College) %>%
mutate(Outstate = Outstate / 1000,
Room.Board = Room.Board / 1000)# rescale Outstate in thousands of dollars
college <- as_tibble(ISLR::College) %>%
mutate(Outstate = Outstate / 1000,
Room.Board = Room.Board / 1000)# rescale Outstate in thousands of dollars
install.packages("ISLR")
college <- as_tibble(ISLR::College) %>%
mutate(Outstate = Outstate / 1000,
Room.Board = Room.Board / 1000)# rescale Outstate in thousands of dollars
crossv_kfold(College, k = 10) %>%
mutate(linear = map(train,  ~ glm(Outstate ~ PhD, data = .)),
log = map(train,  ~ glm(Outstate ~ log(PhD), data = .)),
spline = map(train,  ~ glm(Outstate ~ bs(PhD, df = 5), data = .))) %>%
gather(type, model, linear:spline) %>%
mutate(mse = map2_dbl(model, test, mse)) %>%
group_by(type) %>%
summarize(mse = mean(mse))# k-fold cv of three model types
crossv_kfold(college, k = 10) %>%
mutate(linear = map(train,  ~ glm(Outstate ~ PhD, data = .)),
log = map(train,  ~ glm(Outstate ~ log(PhD), data = .)),
spline = map(train,  ~ glm(Outstate ~ bs(PhD, df = 5), data = .))) %>%
gather(type, model, linear:spline) %>%
mutate(mse = map2_dbl(model, test, mse)) %>%
group_by(type) %>%
summarize(mse = mean(mse))# k-fold cv of three model types
sqrt_sum <- function(x, y){
if(sum(x, y) < 0) stop("The sum of these numbers is negative.")
sqrt(sum(x, y))
}
sqrt_sum(3, 6)
sqrt_sum <- function(x, y){
if(sum(x, y) < 0) stop("The sum of these numbers is negative.")
sqrt(sum(x, y))
}
sqrt_sum(3, -2)
sqrt_sum <- function(x, y){
if(sum(x, y) < 0) stop("The sum of these numbers is negative.")
sqrt(sum(x, y))
}
sqrt_sum(3, -5)
sqrt_sum <- function(x, y){
if(sum(x, y) < 0) {
message("The sum of these numbers is negative.")
return(NA)
}
sqrt(sum(x, y))
}
sqrt_sum(3,-5)
?traceback()
?try()
genesweep %>%
group_by(period) %>%
ggplot(aes(distance)) +
geom_histogram()
genesweep %>%
group_by(period) %>%
ggplot(aes(distance)) +
geom_qq
genesweep %>%
group_by(period) %>%
ggplot(aes(distance)) +
geom_qq()
genesweep %>%
group_by(period) %>%
ggplot(aes(distance)) +
geom_bar()
genesweep %>%
filter(period == 1) %>%
ggplot(aes(distance)) +
geom_bar()
genesweep %>%
filter(period == 1) %>%
ggplot(aes(distance)) +
geom_histogram()
genesweep %>%
filter(period == 2) %>%
ggplot(aes(distance)) +
geom_histogram()
genesweep %>%
filter(period == 3) %>%
ggplot(aes(distance)) +
geom_histogram()
genesweep %>%
group_by(period) %>%
count()
install.packages("tidytransit")
library(leaflet)
shiny::runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
library(shinythemes)
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
library(DT)
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
runApp('Downloads/CFSS/hw10')
library(tinytex)
setwd("~/Downloads/STAT 22000")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
prob_dist <- tribble(
~outcome, ~payoff, ~probability,
"red", 0, 26/52,
"spade", 5, 13/52,
"club", 10, 12/52,
"club (ace)", 30, 1/52)
kable(prob_dist)
setwd("~/Downloads/STAT 22000")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
rmarkdown::render("HW4A.Rmd")
rmarkdown::render("HW4A.Rmd")
rmarkdown::render("HW4A.Rmd")
rmarkdown::render("HW4A.Rmd")
setwd("~/Downloads/STAT 22000")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
rmarkdown::render("HW4A.Rmd")
rmarkdown::render("HW4A.Rmd")
rmarkdown::render("HW4A.Rmd")
tinytex::install_tinytex()
tinytex::is_tinytex()
tinytex::is_tinytex()
rmarkdown::render("HW4A.Rmd")
install_version(“rmarkdown”, version = “1.8”)
tinytex::is_tinytex()
install.packages(c("devtools", "pkgdown", "roxygen2", "testthat", "usethis"))
R.home()
list.files(R.home())
R.version
.Library
installed.packages()
packages <- installed.packages()
pakages <- as.data.frame(packages)
View(pakages)
nrow(pakages)
rm(list = ls())
packages <- installed.packages()
pkgs <- as.data.frame(packages)
count(pkgs)
library(tidyverse)
count(pkgs)
??count
?count
?source()
rm(list = ls())
usethis::create_package("~\\Desktop\\Downloads\\Extracurriculars\\educational")
setwd("~/Downloads/Extracurriculars/educational")
usethis::create_package("~/Downloads/Extracurriculars/educational")
setwd("~/Downloads/Extracurriculars/educational/pkg")
usethis::create_package("~/Downloads/Extracurriculars/educational/pkg"")
usethis::create_package("~/Downloads/Extracurriculars/educational/pkg")
rm(list=ls())
?usethis
??usethis
devtools::load_all(".")
devtools::load_all(".")
usethis::use_r("")
devtools::load_all(".")
usethis::use_r("zooSounds")
devtools::load_all(".")
devtools::load_all(".")
devtools::check()
goToTheZoo("Penguin")
goToTheZoo("Penguin", "Honk")
??glue
usethis::edit_r_profile()
use_package("glue")
usethis::use_package("glue")
